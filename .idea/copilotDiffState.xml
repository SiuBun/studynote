<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/wsb/customview/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/wsb/customview/MainActivity.kt" />
              <option name="originalContent" value="package com.wsb.customview&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.util.Log&#10;import android.util.SparseArray&#10;import android.view.View&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.ViewCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import androidx.fragment.app.Fragment&#10;import com.wsb.customview.databinding.ActivityMainBinding&#10;import com.wsb.customview.fragment.CameraFragment&#10;import com.wsb.customview.fragment.CanvasFragment&#10;import com.wsb.customview.fragment.MatrixFragment&#10;import com.wsb.customview.fragment.MultiTouchFragment&#10;import com.wsb.customview.fragment.paint.PaintFragment&#10;import com.wsb.customview.fragment.practice.PracticeFragment&#10;import com.wsb.customview.fragment.practice.ScalaImageFragment&#10;import com.wsb.customview.motionlayout.MotionLayoutActivity&#10;import com.wsb.customview.motionlayout.MotionSearchActivity&#10;import com.wsb.customview.shareelement.ShareElementActivity&#10;import com.wsb.customview.utils.LogUtils&#10;import com.wsb.customview.view.WaveView&#10;import com.wsb.customview.view.instantfloating.data.FloatingMenuItems&#10;import com.wsb.customview.view.instantfloating.strategy.LayoutType&#10;import com.wsb.customview.view.instantfloating.widget.InstantFloatingWindow&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    companion object {&#10;        const val TAG = &quot;MainActivity&quot;&#10;    }&#10;&#10;    private var mWindow: InstantFloatingWindow? = null&#10;    private lateinit var mBinding: ActivityMainBinding&#10;&#10;    private var sparseArray: SparseArray&lt;FloatingMenuItems&gt; = SparseArray()&#10;    private var showing = false&#10;    &#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        mBinding = ActivityMainBinding.inflate(layoutInflater)&#10;        setContentView(mBinding.root)&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.llt_container)) { v, insets -&gt;&#10;            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)&#10;            insets&#10;        }&#10;&#10;        initListener()&#10;        &#10;        val menuNameList = ArrayList&lt;String&gt;()&#10;        val icons = intArrayOf(R.drawable.floating_account, R.drawable.floating_msg, R.drawable.floating_hide)&#10;        menuNameList.add(&quot;account&quot;)&#10;        menuNameList.add(&quot;msg&quot;)&#10;        menuNameList.add(&quot;hide&quot;)&#10;        for (i in menuNameList.indices) {&#10;            sparseArray.append(i, FloatingMenuItems(menuNameList[i], icons[i]))&#10;        }&#10;&#10;        mBinding.waveView.apply {&#10;            setWaveHeight(100f)&#10;            setWaveFrequency(0.1f)&#10;            setWaveSpeed(6f)&#10;            setWavePhase(0f)&#10;            setSecondWavePhaseOffset(90f)&#10;            startWaveAnimation()&#10;        }&#10;&#10;    }&#10;&#10;    private fun initListener() {&#10;        mBinding.apply {&#10;            btnPaint.setOnClickListener {&#10;                Log.d(TAG, &quot;paintPage&quot;)&#10;                getCommit(PaintFragment.newInstance())&#10;            }&#10;&#10;            btnCanvas.setOnClickListener {&#10;                Log.d(TAG, &quot;canvasPage&quot;)&#10;                getCommit(CanvasFragment.newInstance())&#10;            }&#10;            btnCamera.setOnClickListener {&#10;                Log.d(TAG, &quot;cameraPage&quot;)&#10;                getCommit(CameraFragment.newInstance())&#10;            }&#10;&#10;            btnMatrix.setOnClickListener {&#10;                Log.d(TAG, &quot;matrixPage&quot;)&#10;                getCommit(MatrixFragment.newInstance())&#10;            }&#10;&#10;            btnPractice.setOnClickListener {&#10;                Log.d(TAG, &quot;practicePage&quot;)&#10;                getCommit(PracticeFragment.newInstance())&#10;            }&#10;&#10;            btnScrollDemo.setOnClickListener {&#10;                Log.d(TAG, &quot;scrollPage&quot;)&#10;                getCommit(ScalaImageFragment.newInstance())&#10;            }&#10;&#10;            btnHomework.setOnClickListener {&#10;                Log.d(TAG, &quot;homeworkPage&quot;)&#10;                getCommit(MultiTouchFragment.newInstance())&#10;            }&#10;&#10;            btnNavigate.setOnClickListener {&#10;                Log.d(TAG, &quot;navigate&quot;)&#10;                startActivity(Intent(this@MainActivity, ShareElementActivity::class.java))&#10;            }&#10;&#10;            btnMotion.setOnClickListener {&#10;                Log.d(TAG, &quot;motion&quot;)&#10;                startActivity(Intent(this@MainActivity, MotionLayoutActivity::class.java))&#10;            }&#10;&#10;            btnMotionSearch.setOnClickListener {&#10;                Log.d(TAG, &quot;motionSearch&quot;)&#10;                startActivity(Intent(this@MainActivity, MotionSearchActivity::class.java))&#10;            }&#10;&#10;            btnFloatAction.setOnClickListener {&#10;                floatingShow()&#10;            }&#10;&#10;            btnCompose.setOnClickListener {&#10;                Log.d(TAG, &quot;compose&quot;)&#10;                startActivity(Intent(this@MainActivity, ComposeActivity::class.java))&#10;            }&#10;&#10;            btnRecyclerView.setOnClickListener {&#10;                Log.d(TAG, &quot;recyclerView&quot;)&#10;                startActivity(Intent(this@MainActivity, RecyclerViewActivity::class.java))&#10;            }&#10;        }&#10;    }&#10;&#10;    private fun getCommit(fragment: Fragment) {&#10;        supportFragmentManager.beginTransaction().replace(R.id.llt_container, fragment).addToBackStack(null).commit()&#10;    }&#10;&#10;    private fun floatingShow() {&#10;        Log.d(&quot;custom&quot;, &quot;floatingShow:$showing&quot;)&#10;&#10;&#10;        if (mWindow == null) {&#10;            mWindow = InstantFloatingWindow&#10;                .with(this@MainActivity)&#10;                .setLogo(R.drawable.floating_logo)&#10;                .setLayoutType(LayoutType.LEFT)&#10;                .setMenuItems(sparseArray)&#10;                .setMenuItemsClickListener { position: Int, title: String -&gt; LogUtils.d(&quot;点击了菜单列表中第&quot; + position + &quot;个菜单项,标题为&quot; + title) }&#10;                .build()&#10;        }&#10;&#10;        if (showing) {&#10;            mWindow?.hide()&#10;        } else {&#10;            mWindow?.show()&#10;        }&#10;        showing = !showing&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        mWindow?.onDestroy()&#10;        super.onDestroy()&#10;    }&#10;&#10;&#10;}" />
              <option name="updatedContent" value="package com.wsb.customview&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.util.Log&#10;import android.util.SparseArray&#10;import android.view.View&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.ViewCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import androidx.fragment.app.Fragment&#10;import com.wsb.customview.databinding.ActivityMainBinding&#10;import com.wsb.customview.fragment.CameraFragment&#10;import com.wsb.customview.fragment.CanvasFragment&#10;import com.wsb.customview.fragment.MatrixFragment&#10;import com.wsb.customview.fragment.MultiTouchFragment&#10;import com.wsb.customview.fragment.paint.PaintFragment&#10;import com.wsb.customview.fragment.practice.PracticeFragment&#10;import com.wsb.customview.fragment.practice.ScalaImageFragment&#10;import com.wsb.customview.motionlayout.MotionLayoutActivity&#10;import com.wsb.customview.motionlayout.MotionSearchActivity&#10;import com.wsb.customview.shareelement.ShareElementActivity&#10;import com.wsb.customview.utils.LogUtils&#10;import com.wsb.customview.view.WaveView&#10;import com.wsb.customview.view.instantfloating.data.FloatingMenuItems&#10;import com.wsb.customview.view.instantfloating.strategy.LayoutType&#10;import com.wsb.customview.view.instantfloating.widget.InstantFloatingWindow&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    companion object {&#10;        const val TAG = &quot;MainActivity&quot;&#10;    }&#10;&#10;    private var mWindow: InstantFloatingWindow? = null&#10;    private lateinit var mBinding: ActivityMainBinding&#10;&#10;    private var sparseArray: SparseArray&lt;FloatingMenuItems&gt; = SparseArray()&#10;    private var showing = false&#10;    &#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        mBinding = ActivityMainBinding.inflate(layoutInflater)&#10;        setContentView(mBinding.root)&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.llt_container)) { v, insets -&gt;&#10;            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)&#10;            insets&#10;        }&#10;&#10;        initListener()&#10;        &#10;        val menuNameList = ArrayList&lt;String&gt;()&#10;        val icons = intArrayOf(R.drawable.floating_account, R.drawable.floating_msg, R.drawable.floating_hide)&#10;        menuNameList.add(&quot;account&quot;)&#10;        menuNameList.add(&quot;msg&quot;)&#10;        menuNameList.add(&quot;hide&quot;)&#10;        for (i in menuNameList.indices) {&#10;            sparseArray.append(i, FloatingMenuItems(menuNameList[i], icons[i]))&#10;        }&#10;&#10;        mBinding.waveView.apply {&#10;            setWaveHeight(100f)&#10;            setWaveFrequency(0.1f)&#10;            setWaveSpeed(6f)&#10;            setWavePhase(0f)&#10;            setSecondWavePhaseOffset(90f)&#10;            startWaveAnimation()&#10;        }&#10;&#10;    }&#10;&#10;    private fun initListener() {&#10;        mBinding.apply {&#10;            btnPaint.setOnClickListener {&#10;                Log.d(TAG, &quot;paintPage&quot;)&#10;                getCommit(PaintFragment.newInstance())&#10;            }&#10;&#10;            btnCanvas.setOnClickListener {&#10;                Log.d(TAG, &quot;canvasPage&quot;)&#10;                getCommit(CanvasFragment.newInstance())&#10;            }&#10;            btnCamera.setOnClickListener {&#10;                Log.d(TAG, &quot;cameraPage&quot;)&#10;                getCommit(CameraFragment.newInstance())&#10;            }&#10;&#10;            btnMatrix.setOnClickListener {&#10;                Log.d(TAG, &quot;matrixPage&quot;)&#10;                getCommit(MatrixFragment.newInstance())&#10;            }&#10;&#10;            btnPractice.setOnClickListener {&#10;                Log.d(TAG, &quot;practicePage&quot;)&#10;                getCommit(PracticeFragment.newInstance())&#10;            }&#10;&#10;            btnScrollDemo.setOnClickListener {&#10;                Log.d(TAG, &quot;scrollPage&quot;)&#10;                getCommit(ScalaImageFragment.newInstance())&#10;            }&#10;&#10;            btnHomework.setOnClickListener {&#10;                Log.d(TAG, &quot;homeworkPage&quot;)&#10;                getCommit(MultiTouchFragment.newInstance())&#10;            }&#10;&#10;            btnNavigate.setOnClickListener {&#10;                Log.d(TAG, &quot;navigate&quot;)&#10;                startActivity(Intent(this@MainActivity, ShareElementActivity::class.java))&#10;            }&#10;&#10;            btnMotion.setOnClickListener {&#10;                Log.d(TAG, &quot;motion&quot;)&#10;                startActivity(Intent(this@MainActivity, MotionLayoutActivity::class.java))&#10;            }&#10;&#10;            btnMotionSearch.setOnClickListener {&#10;                Log.d(TAG, &quot;motionSearch&quot;)&#10;                startActivity(Intent(this@MainActivity, MotionSearchActivity::class.java))&#10;            }&#10;&#10;            btnFloatAction.setOnClickListener {&#10;                floatingShow()&#10;            }&#10;&#10;            btnCompose.setOnClickListener {&#10;                Log.d(TAG, &quot;compose&quot;)&#10;                startActivity(Intent(this@MainActivity, ComposeActivity::class.java))&#10;            }&#10;&#10;            btnRecyclerView.setOnClickListener {&#10;                Log.d(TAG, &quot;recyclerView&quot;)&#10;                startActivity(Intent(this@MainActivity, RecyclerViewActivity::class.java))&#10;            }&#10;&#10;            // 新增按钮，跳转到MultiViewActivity&#10;            val btnMultiView = androidx.appcompat.widget.AppCompatButton(this@MainActivity).apply {&#10;                id = View.generateViewId()&#10;                text = &quot;MultiView&quot;&#10;                layoutParams = android.widget.LinearLayout.LayoutParams(&#10;                    android.widget.LinearLayout.LayoutParams.WRAP_CONTENT,&#10;                    120&#10;                )&#10;            }&#10;            (btnRecyclerView.parent as android.view.ViewGroup).addView(btnMultiView)&#10;            btnMultiView.setOnClickListener {&#10;                startActivity(Intent(this@MainActivity, MultiViewActivity::class.java))&#10;            }&#10;        }&#10;    }&#10;&#10;    private fun getCommit(fragment: Fragment) {&#10;        supportFragmentManager.beginTransaction().replace(R.id.llt_container, fragment).addToBackStack(null).commit()&#10;    }&#10;&#10;    private fun floatingShow() {&#10;        Log.d(&quot;custom&quot;, &quot;floatingShow:$showing&quot;)&#10;&#10;&#10;        if (mWindow == null) {&#10;            mWindow = InstantFloatingWindow&#10;                .with(this@MainActivity)&#10;                .setLogo(R.drawable.floating_logo)&#10;                .setLayoutType(LayoutType.LEFT)&#10;                .setMenuItems(sparseArray)&#10;                .setMenuItemsClickListener { position: Int, title: String -&gt; LogUtils.d(&quot;点击了菜单列表中第&quot; + position + &quot;个菜单项,标题为&quot; + title) }&#10;                .build()&#10;        }&#10;&#10;        if (showing) {&#10;            mWindow?.hide()&#10;        } else {&#10;            mWindow?.show()&#10;        }&#10;        showing = !showing&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        mWindow?.onDestroy()&#10;        super.onDestroy()&#10;    }&#10;&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/wsb/customview/MultiViewActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/wsb/customview/MultiViewActivity.kt" />
              <option name="originalContent" value="package com.wsb.customview&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.widget.Button&#10;import android.widget.ImageView&#10;import android.widget.TextView&#10;import android.widget.Toast&#10;import androidx.appcompat.app.AppCompatActivity&#10;import com.wsb.customview.utils.LogUtils&#10;&#10;class MultiViewActivity : AppCompatActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_multi_view)&#10;&#10;        findViewById&lt;Button&gt;(R.id.btn1).setOnClickListener {&#10;            // 按钮1点击事件&#10;            // 这里可以自定义逻辑&#10;            Toast.makeText(this, &quot;btn1&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;        findViewById&lt;ImageView&gt;(R.id.img1).setOnClickListener {&#10;            // 图片点击事件&#10;            Toast.makeText(this, &quot;img1&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;        findViewById&lt;TextView&gt;(R.id.tv1).setOnClickListener {&#10;            // 文本点击事件&#10;            Toast.makeText(this, &quot;tv1&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.wsb.customview&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.widget.Button&#10;import android.widget.ImageView&#10;import android.widget.TextView&#10;import android.widget.Toast&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.wsb.customview.utils.LogUtils&#10;&#10;class MultiViewActivity : AppCompatActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_multi_view)&#10;&#10;        // 伪数据&#10;        val data = (1..100).map { &quot;Item $it&quot; }&#10;&#10;        val recyclerView = findViewById&lt;RecyclerView&gt;(R.id.recyclerView)&#10;        recyclerView.layoutManager = LinearLayoutManager(this)&#10;        recyclerView.adapter = MyAdapter(data)&#10;&#10;        findViewById&lt;Button&gt;(R.id.btn1).setOnClickListener {&#10;            // 按钮1点击事件&#10;            // 这里可以自定义逻辑&#10;            Toast.makeText(this, &quot;btn1&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;        findViewById&lt;ImageView&gt;(R.id.img1).setOnClickListener {&#10;            // 图片点击事件&#10;            Toast.makeText(this, &quot;img1&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;        findViewById&lt;TextView&gt;(R.id.tv1).setOnClickListener {&#10;            // 文本点击事件&#10;            Toast.makeText(this, &quot;tv1&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;    }&#10;&#10;    private class MyAdapter(private val data: List&lt;String&gt;) :&#10;        RecyclerView.Adapter&lt;MyAdapter.ViewHolder&gt;() {&#10;&#10;        class ViewHolder(view: android.view.View) : RecyclerView.ViewHolder(view) {&#10;            val textView: TextView = view.findViewById(android.R.id.text1)&#10;        }&#10;&#10;        override fun onCreateViewHolder(parent: android.view.ViewGroup, viewType: Int): ViewHolder {&#10;            val view = android.view.LayoutInflater.from(parent.context)&#10;                .inflate(android.R.layout.simple_list_item_1, parent, false)&#10;            return ViewHolder(view)&#10;        }&#10;&#10;        override fun onBindViewHolder(holder: ViewHolder, position: Int) {&#10;            holder.textView.text = data[position]&#10;        }&#10;&#10;        override fun getItemCount() = data.size&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_multi_view.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_multi_view.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.MultiViewActivity&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/app_bar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@android:color/transparent&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            app:layout_collapseMode=&quot;pin&quot;&#10;            app:navigationIcon=&quot;@android:drawable/ic_menu_info_details&quot;&#10;            app:navigationIconTint=&quot;@android:color/black&quot;&#10;            app:title=&quot;新界面&quot;&#10;            app:titleTextColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.appbar.CollapsingToolbarLayout&#10;            android:id=&quot;@+id/collapsing_toolbar_layout&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;300dp&quot;&#10;            app:contentScrim=&quot;@color/white&quot;&#10;            app:layout_scrollFlags=&quot;scroll|exitUntilCollapsed&quot;&#10;            app:scrimAnimationDuration=&quot;200&quot;&#10;            app:scrimVisibleHeightTrigger=&quot;100dp&quot;&gt;&#10;&#10;            &lt;FrameLayout&#10;                android:id=&quot;@+id/frameLayout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                app:layout_collapseMode=&quot;none&quot;&gt;&#10;&#10;                &lt;Button&#10;                    android:id=&quot;@+id/btn1&quot;&#10;                    android:layout_width=&quot;120dp&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:layout_gravity=&quot;top|end&quot;&#10;                    android:layout_margin=&quot;16dp&quot;&#10;                    android:text=&quot;按钮1&quot; /&gt;&#10;&#10;                &lt;ImageView&#10;                    android:id=&quot;@+id/img1&quot;&#10;                    android:layout_width=&quot;80dp&quot;&#10;                    android:layout_height=&quot;80dp&quot;&#10;                    android:layout_gravity=&quot;center&quot;&#10;                    android:background=&quot;#acacac&quot;&#10;                    android:src=&quot;@drawable/ic_launcher_foreground&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv1&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_gravity=&quot;bottom|end&quot;&#10;                    android:layout_margin=&quot;16dp&quot;&#10;                    android:text=&quot;文本1&quot;&#10;                    android:textColor=&quot;@android:color/white&quot;&#10;                    android:textSize=&quot;18sp&quot; /&gt;&#10;            &lt;/FrameLayout&gt;&#10;        &lt;/com.google.android.material.appbar.CollapsingToolbarLayout&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tab_placeholder&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:background=&quot;@color/white&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:text=&quot;我是 TabLayout 的占位符&quot;&#10;            android:textColor=&quot;@android:color/black&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            app:layout_collapseMode=&quot;pin&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerView&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot; /&gt;&#10;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.MultiViewActivity&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/app_bar&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@android:color/transparent&quot;&gt;&#10;&#10;        &lt;com.google.android.material.appbar.CollapsingToolbarLayout&#10;            android:id=&quot;@+id/collapsing_toolbar_layout&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;300dp&quot;&#10;            app:contentScrim=&quot;@color/white&quot;&#10;            app:layout_scrollFlags=&quot;scroll|exitUntilCollapsed&quot;&#10;            app:scrimAnimationDuration=&quot;200&quot;&#10;            app:scrimVisibleHeightTrigger=&quot;100dp&quot;&gt;&#10;&#10;            &lt;FrameLayout&#10;                android:id=&quot;@+id/frameLayout&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                app:layout_collapseMode=&quot;parallax&quot;&gt;&#10;&#10;                &lt;Button&#10;                    android:id=&quot;@+id/btn1&quot;&#10;                    android:layout_width=&quot;120dp&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:layout_gravity=&quot;top|end&quot;&#10;                    android:layout_margin=&quot;16dp&quot;&#10;                    android:text=&quot;按钮1&quot; /&gt;&#10;&#10;                &lt;ImageView&#10;                    android:id=&quot;@+id/img1&quot;&#10;                    android:layout_width=&quot;80dp&quot;&#10;                    android:layout_height=&quot;80dp&quot;&#10;                    android:layout_gravity=&quot;center&quot;&#10;                    android:background=&quot;#acacac&quot;&#10;                    android:src=&quot;@drawable/ic_launcher_foreground&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv1&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_gravity=&quot;bottom|end&quot;&#10;                    android:layout_margin=&quot;16dp&quot;&#10;                    android:text=&quot;文本1&quot;&#10;                    android:textColor=&quot;@android:color/white&quot;&#10;                    android:textSize=&quot;18sp&quot; /&gt;&#10;            &lt;/FrameLayout&gt;&#10;&#10;            &lt;androidx.appcompat.widget.Toolbar&#10;                android:id=&quot;@+id/toolbar&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;?attr/actionBarSize&quot;&#10;                app:layout_collapseMode=&quot;pin&quot;&#10;                app:navigationIcon=&quot;@android:drawable/ic_menu_info_details&quot;&#10;                app:navigationIconTint=&quot;@android:color/black&quot;&#10;                app:title=&quot;新界面&quot;&#10;                app:titleTextColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tab_placeholder&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;48dp&quot;&#10;                android:background=&quot;@color/white&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:text=&quot;我是 TabLayout 的占位符&quot;&#10;                android:textColor=&quot;@android:color/black&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                app:layout_collapseMode=&quot;pin&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.appbar.CollapsingToolbarLayout&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerView&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot; /&gt;&#10;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>